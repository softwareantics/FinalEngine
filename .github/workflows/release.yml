name: ðŸš€ Release
run-name: ðŸš€ ${{ github.ref_name }} Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # FinalEngine.Platform
  build_platform:
    name: Build and Upload FinalEngine.Platform
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore FinalEngine.Platform/FinalEngine.Platform.csproj

      - name: Build
        run: dotnet build FinalEngine.Platform/FinalEngine.Platform.csproj --no-restore --configuration Release

      - name: Pack
        run: dotnet pack FinalEngine.Platform/FinalEngine.Platform.csproj --no-build --configuration Release --output ./nupkgs

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: FinalEngine.Platform.nupkg
          path: ./nupkgs/*.nupkg

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: FinalEngine.Platform
          path: FinalEngine.Platform/bin/Release/net9.0/

  # FinalEngine.Platform.Desktop
  build_platform_desktop:
    name: Build and Upload FinalEngine.Platform.Desktop
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore FinalEngine.Platform.Desktop/FinalEngine.Platform.Desktop.csproj

      - name: Build
        run: dotnet build FinalEngine.Platform.Desktop/FinalEngine.Platform.Desktop.csproj --no-restore --configuration Release

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: FinalEngine.Platform.Desktop
          path: FinalEngine.Platform.Desktop/bin/Release/net9.0-windows/

  # FinalEngine.Runtime
  build_runtime:
    name: Build and Upload FinalEngine.Runtime
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore FinalEngine.Runtime/FinalEngine.Runtime.csproj

      - name: Build
        run: dotnet build FinalEngine.Runtime/FinalEngine.Runtime.csproj --no-restore --configuration Release

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: FinalEngine.Runtime
          path: FinalEngine.Runtime/bin/Release/net9.0/

  # FinalEngine.Utilities
  build_utilities:
    name: Build and Upload FinalEngine.Utilities
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore FinalEngine.Utilities/FinalEngine.Utilities.csproj

      - name: Build
        run: dotnet build FinalEngine.Utilities/FinalEngine.Utilities.csproj --no-restore --configuration Release

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: FinalEngine.Utilities
          path: FinalEngine.Utilities/bin/Release/net9.0/

  # Release
  release:
    name: Create GitHub Release
    needs: [build_platform, build_platform_desktop, build_runtime, build_utilities]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1 

      - name: Download FinalEngine.Platform artificats
        uses: actions/download-artifact@v4
        with:
          name: FinalEngine.Platform
          path: artifacts/FinalEngine.Platform

      - name: Download FinalEngine.Platform.Desktop artifacts
        uses: actions/download-artifact@v4
        with:
          name: FinalEngine.Platform.Desktop
          path: artifacts/FinalEngine.Platform.Desktop

      - name: Download FinalEngine.Runtime artifacts
        uses: actions/download-artifact@v4
        with:
          name: FinalEngine.Runtime
          path: artifacts/FinalEngine.Runtime

      - name: Download FinalEngine.Utilities artifacts
        uses: actions/download-artifact@v4
        with:
          name: FinalEngine.Utilities
          path: artifacts/FinalEngine.Utilities

      - name: Zip artifacts
        run: |
          cd artifacts
          zip -r FinalEngine.Platform.zip FinalEngine.Platform
          zip -r FinalEngine.Platform.Desktop.zip FinalEngine.Platform.Desktop
          zip -r FinalEngine.Runtime.zip FinalEngine.Runtime
          zip -r FinalEngine.Utilities.zip FinalEngine.Utilities

      - name: Extract version
        id: kacl
        uses: zogot/kacl-parser@1.0.0
        with:
          version: ${{ github.ref_name }}
        
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.kacl.outputs.release }}
          files: |
            artifacts/FinalEngine.Platform.zip
            artifacts/FinalEngine.Platform.Desktop.zip
            artifacts/FinalEngine.Runtime.zip
            artifacts/FinalEngine.Utilities.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download NuGet packages
        uses: actions/download-artifact@v4
        with:
          path: nupkgs
      
      - name: Push to NuGet
        run: |
          mkdir -p ./temp-feed
          for file in nupkgs/**/*.nupkg; do
            dotnet nuget push "$file" --api-key ${{ secrets.NUGET_API_KEY }} --source ./temp-feed
          done
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
